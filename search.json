[{"path":"https://giuseppealfonzetti.github.io/studCRIRT/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 studCRIRT authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/articles/model.html","id":"data-and-assumptions","dir":"Articles","previous_headings":"","what":"Data and assumptions","title":"Model specification","text":"Data: set exams study plan student \\(\\), \\(\\mathcal{P}_i\\), contains \\(J_i=\\lvert\\mathcal{P}_i\\rvert\\) exams. vector random grades \\(\\mathbf{X}_{}=(X_{i1},\\dots,X_{iJ_i})^\\top\\). fixed vector thresholds days \\(\\{\\nu_0,\\nu_1,\\nu_2,\\dots\\}\\) day \\(t\\) belongs academic year \\(y_t\\) (write \\(t\\y_t\\)) \\(\\nu_{y_t-1}<t\\leq\\nu_{y_t}\\). deterministic year \\(y_i^{\\max}\\) represents last observable year student \\(\\). Consequently, last observable day assumed \\(\\nu_{y_i^{\\max}}\\). \\(T_i^o\\) day \\(O_i\\) occurs. observe exactly since observe related academic year \\(Y_i^o\\). \\(T_{ij}^E\\) day last attempt student \\(\\) exam \\(j\\) observed exactly. \\(C_i=\\min\\{\\nu_{Y_i^o},\\nu_{y_i^{\\max}}\\}\\) last day observed unit \\(\\). outcome \\(O_i\\\\mathcal{O}=\\{\\texttt{g, d, t}\\}\\), \\(\\texttt{g}\\) stands graduation, \\(\\texttt{d}\\) dropout \\(\\texttt{t}\\) transfer another course. Censoring assumptions: \\(Y_i^o\\) censored \\(Y_i^o>y_i^{\\max}\\). informative. pair \\((X_{ij},T_{ij}^E)\\) censored \\(R_{ij}=0\\), \\(R_{ij}=\\mathbf{}(\\text{$T_{ij}^E < C_i$ $X_{ij}\\geq 18$})\\) assumptions: latent_distr(): \\(\\begin{bmatrix} \\xi \\\\ \\tau \\end{bmatrix}\\sim\\mathcal{N}\\left(\\begin{bmatrix}0 \\\\ 0 \\end{bmatrix}, \\begin{bmatrix} 1, \\rho\\sigma_\\tau \\\\ \\rho\\sigma_\\tau, \\sigma^2_\\tau \\end{bmatrix}\\right)\\); pTimeExam(): \\(\\log T_{ij}^E|\\tau \\sim \\mathcal{N}\\left(\\gamma_j-\\tau, \\lambda_j^{-2}\\right)\\) \\(=1,\\dots,n\\) \\(j=1,\\dots, J_i\\). outcome \\(O_i\\), day \\(t\\), observed end year, day \\(\\nu_{y_t}\\). Let \\(\\mathcal{O}^{}= \\{\\texttt{g}\\}\\) \\(\\mathcal{O}^{b}=\\{\\texttt{d, t}\\}\\). assume , year \\(y\\), completed exams, possible outcomes \\(O_i\\\\mathcal{O}^{b}\\). Similarly, starting year last exam taken, possible outcome \\(O_i = \\texttt{g}\\). exam retaking \\(X_{ij}\\geq 18\\). \\(\\dots\\) Derived quantities given times: Grades: Let \\(X_{ij}(t)\\) grade exam \\(j\\) day \\(t\\); \\(Z_{ij}^E(t)=\\mathbf{}(t\\leq C_i, X_{ij}(u) \\text{ observed } s=1,\\dots,t-1)\\), .e. subject \\(\\) risk passing exam \\(j\\); \\(S_{ij}(t)=Z_{ij}^E(t)\\mathbf{}(T_{ij}^E=t, X\\geq 18)\\), .e. success exam \\(j\\) day \\(t\\). , \\(X_{ij}(t)\\) missing \\(S_{ij}(t)=0\\). Let \\(\\mathbf{S}_i(t)=(S_{i1}(t),\\dots, S_{iJ_i}(t))\\); Outcome: Since observe \\(T_i^o\\) directly, \\(Y_i^o\\), none quantities related \\(T_i^o\\) can observed directly data given \\(t\\). Thus, need define year-related quantities: Let \\(Z^{o}_i(y)=\\mathbf{}(y\\leq y_{C_i})\\) indicator denoting student risk experiencing outcome year \\(y\\). Let \\(F_i(y)=Z^{o}_i(y)\\mathbf{}(y=Y_i^o)\\) denote whether student experiencing outcome year \\(y\\). Let \\(O_i(y)\\) denotes outcome experienced year \\(y\\). follows , daily base, can observed lagged quantities previous year. Thus, generic day \\(t\\), using notation \\(y_t\\) refer year \\(t\\) belongs , define: \\[\\begin{align*}       O_i^*(t) =       \\begin{cases}           O_i(y_t-1)&\\text{$t<\\nu_{y_t}$;}\\\\           O_i(y_t)&\\text{$t=\\nu_{y_t}$}       \\end{cases},       \\quad\\quad       F_i^*(t) =       \\begin{cases}           F_i(y_t-1)&\\text{$t<\\nu_{y_t}$;}\\\\           F_i(y_t)&\\text{$t=\\nu_{y_t}$}       \\end{cases},   \\end{align*}\\]","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/articles/model.html","id":"full-model","dir":"Articles","previous_headings":"","what":"Full model","title":"Model specification","text":"data observed student, day \\(t\\), \\(\\mathcal{D}_i(t)=\\big\\{\\mathbf{X}_i(t), \\mathbf{S}_i(t), O^*_i(t), F^*_i(t)\\big\\}\\). Thus, history day \\(t\\) defined \\[\\begin{align*}     \\mathcal{H}_i(t)=\\{\\mathcal{D}_i(u), \\text{ $u=1,\\dots,t-1$}\\}. \\end{align*}\\] , model joint probability data (conditioned ability speed) recursively conditioning past, .e. \\[\\begin{align*}     \\mathcal{L}_i &= \\prod_{t=1}^\\infty p(\\mathcal{D}_i(t)|\\mathcal{H}_i(t), \\xi, \\tau)= \\prod_{t=1}^\\infty p(O^*_i(t), F^*_i(t)|\\mathbf{X}_i(t), \\mathbf{S}_i(t), \\mathcal{H}_i(t), \\xi, \\tau)p(\\mathbf{X}_i(t), \\mathbf{S}_i(t)| \\mathcal{H}_i(t), \\xi, \\tau)\\\\     &= \\prod_{t=1}^\\infty p( O^*_i(t), F^*_i(t)|\\mathbf{X}_i(t), \\mathbf{S}_i(t), \\mathcal{H}_i(t), \\xi, \\tau)\\prod_{t=1}^\\infty p(\\mathbf{X}_i(t), \\mathbf{S}_i(t)| \\mathcal{H}_i(t), \\xi, \\tau). \\end{align*}\\] Note \\(p( O^*_i(t), F^*_i(t)|\\mathbf{X}_i(t), \\mathbf{S}_i(t), \\mathcal{H}_i(t), \\xi, \\tau)=1\\) \\(t\\neq \\nu_{y_t}\\), \\(O^*_i(t), F^*_i(t)\\) known given \\(\\mathcal{H}_i(t)\\) \\(t<\\nu_{y_t}\\). Thus, likelihood can simplified \\[\\begin{align}     \\mathcal{L}_i=\\prod_{y=1}^\\infty p( O_i(y), F_i(y)|\\mathbf{X}_i(\\nu_y), \\mathbf{S}_i(\\nu_y), \\mathcal{H}_i(\\nu_y), \\xi, \\tau)\\prod_{t=1}^\\infty p(\\mathbf{X}_i(t), \\mathbf{S}_i(t)| \\mathcal{H}_i(t), \\xi, \\tau) \\end{align}\\]","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/articles/model.html","id":"irt-submodel","dir":"Articles","previous_headings":"","what":"IRT submodel","title":"Model specification","text":"Recall \\(\\nu_{y_i^{\\max}}\\) deterministic known. implies \\(R^{E}_{ij}(t)\\) always known given \\(\\mathcal{H}_i(t)\\) \\(j\\). consideration can shown allow reformulating infinite product \\[\\begin{align}     \\prod_{t=1}^\\infty p(\\mathbf{X}_i(t), \\mathbf{S}_i(t)| \\mathcal{H}_i(t), \\xi, \\tau) = p(\\mathbf{T}_i, \\mathbf{X}_i, \\mathcal{P}_{}(C_i)| \\xi, \\tau) &= \\prod_{j=1}^Jp(T_{ij}^E, X_{ij}, R_{ij}| \\xi, \\tau) \\end{align}\\] \\(\\mathcal{P}_{}(C_i)=\\{j\\\\mathcal{P}_i\\text{  $R_{ij}=1$}\\}\\). likelihood contribution single exam (see examLik()) can written \\[\\begin{align}     p(T_{ij}^E, X_{ij}, R_{ij}| \\xi, \\tau) &= p(T_{ij}^E, X_{ij}| R_{ij}, \\xi, \\tau) p(R_{ij}| \\xi, \\tau)\\\\     &=\\left\\{p(T_{ij}^E=t, X_{ij}=x| \\xi, \\tau)\\right\\}^{R_{ij}}\\left\\{p(R_{ij}=0| \\xi, \\tau)\\right\\}^{1-R_{ij}}\\notag \\end{align}\\] \\[\\begin{align}     p(T_{ij}^E=t, X_{ij}=x| \\xi, \\tau) &= p(T_{ij}^E = t| \\tau)p(X_{ij}^E = x| \\xi);\\\\     p(R_{ij}=0| \\xi, \\tau)&=1-p(X_{ij}\\geq 18|\\tau)p(T_{ij}^E\\leq T_i|\\tau) \\end{align}\\] grades probabilities (see pGreaterGrades() pGrade()) modelled via \\[\\begin{align}     p(X_{ij}=x|\\xi)&= P(X_{ij} \\geq x |\\xi) - P(X_{ij} \\geq x + 1|\\xi);\\\\     P(X_{ij} \\geq x |\\xi)& =\\frac{\\exp(\\alpha_j \\xi + \\beta_{jx})}{1+\\exp(\\alpha_j \\xi + \\beta_{jx})}. \\end{align}\\]","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/articles/model.html","id":"competing-risk-submodel","dir":"Articles","previous_headings":"","what":"Competing risk submodel","title":"Model specification","text":"Let \\(L_i(t)=\\mathbf{}\\big(\\sum_{j\\\\mathcal{P}_i}\\sum_{u}^{t}S_{ij}(u) = J_i\\big)\\) indicates student \\(\\) passed exams day \\(t\\). , can shown competing risk conditional submodel (see outcomeLik()) can rewritten \\[\\begin{align}     &\\prod_{y=1}^\\infty p( O_i(y), F_i(y)|\\mathbf{X}_i(\\nu_y), \\mathbf{S}_i(\\nu_y), \\mathcal{H}_i(\\nu_y), \\xi, \\tau)=\\prod_{y=1}^\\infty p(O_i(y), F_i(y)|L_i(\\nu_y), \\mathcal{H}_i(\\nu_y), \\xi, \\tau) = \\notag\\\\     &\\quad=\\prod_{y=1}^\\infty\\Bigg\\{1-Z^o_i(y)(1-L_i(\\nu_y))\\sum_{k\\\\mathcal{O}^{(b)}}\\lambda_{ik}(y|\\xi,\\tau)-Z^o_i(y)L_i(\\nu_y)\\lambda_{\\texttt{g}}(y|\\xi,\\tau)\\Bigg\\}^{1-F_i(y)}\\left\\{\\prod_{k\\\\mathcal{O}}\\lambda_{ik}(y|\\xi,\\tau)^{F_i(y)\\mathbf{}(O_i=k)}\\right\\}\\notag, \\end{align}\\] \\(\\lambda_{ik}(y|\\xi, \\tau)\\) outcome-specific hazard function (see hazard()), \\(k\\\\mathcal{O}\\). Namely \\[\\begin{align}     \\lambda_{ik}(y|\\xi, \\tau)=     \\begin{cases}         \\frac{\\exp(\\beta_{0yk}+\\beta_{\\xi k}\\xi + \\beta_{\\tau k}\\tau))}{1+\\sum_{u\\\\mathcal{O}^{(b)}}\\exp(\\beta_{0yu}+\\xi \\beta_{\\xi u} + \\tau \\beta_{\\tau u})},&\\text{$k\\\\mathcal{O}^{(b)}$;}\\\\         \\\\         \\frac{\\exp(\\beta_{0y\\texttt{g}}+\\beta_{\\xi \\texttt{g}}\\xi + \\beta_{\\tau  \\texttt{g}}\\tau))}{1+\\exp(\\beta_{0y\\texttt{g}}+\\xi \\beta_{\\xi \\texttt{g}} + \\tau \\beta_{\\tau \\texttt{g}})},&\\text{$k=\\texttt{g}$.}     \\end{cases} \\end{align}\\]","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giuseppe Alfonzetti. Author, maintainer.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alfonzetti G (2024). studCRIRT: Analyse student careers flexible Competing Risk IRT model. R package version 0.0.0.9000, https://giuseppealfonzetti.github.io/studCRIRT/, https://github.com/giuseppealfonzetti/studCRIRT.","code":"@Manual{,   title = {studCRIRT: Analyse student careers with a flexible Competing Risk IRT model},   author = {Giuseppe Alfonzetti},   year = {2024},   note = {R package version 0.0.0.9000, https://giuseppealfonzetti.github.io/studCRIRT/},   url = {https://github.com/giuseppealfonzetti/studCRIRT}, }"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/index.html","id":"studcrirt","dir":"","previous_headings":"","what":"Analyse student careers with a flexible Competing Risk IRT model","title":"Analyse student careers with a flexible Competing Risk IRT model","text":"goal studCRIRT …","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyse student careers with a flexible Competing Risk IRT model","text":"can install development version studCRIRT :","code":"# install.packages(\"devtools\") devtools::install_github(\"giuseppealfonzetti/studCRIRT\")"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/index.html","id":"evaluate-the-integrand","dir":"","previous_headings":"","what":"Evaluate the integrand","title":"Analyse student careers with a flexible Competing Risk IRT model","text":"first, need specify setting dimensions Now can generate random vector paramaters Generate grades times random student given parameters Finally, can plot integrand function outcome year going 1 yle+1. Red dots represent true latent space coordinates. Black dots ones estimated via optim. Grey windows related impossible outcomes.","code":"library(studCRIRT) ## change the seed to try different draws seed <- 123  ## Setup dimensions external_covariates <- 1L     # number of external covariates years_before <- 6L            # number of possible years without graduation risk years_after <- 2L             # number of possible years  with graduation risk grades <- 4L                  # number of grades exams <- 10L                  # number of exams # dimension of the parameter vector related to the competing risk model dim_cr <- 3*(external_covariates+2) + 2*(years_before) + years_after   # dimension of the parameter vector related to the irt model dim_irt <- 3*exams + exams*grades  # dimension of the parameter vector related to latent variables dim_lat <- 2  # draw a random parameter vector of the suitable length set.seed(seed) theta <- rnorm(dim_cr+dim_irt+dim_lat)  # To inspect the parameters we can convert theta to a named list params_list <- paramsVec2list(THETA = theta,                               DIM_EXT = external_covariates,                               NYB = years_before,                               NYA = years_after,                               N_GRADES = grades,                               N_EXAMS = exams)  # here you can manually change parameters (chek the list names) # I do that just to simulate reasonable data params_list[['LAT']][['Corr']] <- .5 params_list[['LAT']][['Speed_variability']] <- 1.5 params_list[['IRT']][['Exams_average_time']] <- sapply(sort(rep(1:5, (round(exams/6)+1)))[1:exams], function(x) log(x*180)) params_list[['IRT']][['Exams_variability_time']] <- runif(exams, .5,2) params_list$IRT$Exams_slopes <- runif(exams, 0.5,1) params_list$CR$Graduation$Slope_ability <- 2 params_list$CR$Graduation$Slope_speed <- 2  # and project them back on a new theta theta <- paramsList2vec(PARAMS_LIST = params_list,                         DIM_EXT = external_covariates,                         NYB = years_before,                         NYA = years_after,                         N_GRADES = grades,                         N_EXAMS = exams) ## read latent parameters from list rho <- params_list[['LAT']][['Corr']] sig <- params_list[['LAT']][['Speed_variability']]  ## latent covariance matrix S <- matrix(c(1,rho*sig,rho*sig,sig^2), 2, 2)  ## draw ability, speed and external covariates value  set.seed(seed+2) lat <- mvtnorm::rmvnorm(1, sigma = S) # lat[1] = ability, lat[2] = speed # lat <- matrix(c(.5,.5), ncol = 2) x <- rnorm(external_covariates)       # external covariates  ## draw grades and times for all exams grades_vec <- rngGrades(   THETA_IRT = theta[(dim_cr+1):(dim_cr+dim_irt)],   N_GRADES = grades,   N_EXAMS = exams,   ABILITY = lat[1],   SEED = seed )$grades times_vec <- rngTimes(   THETA_IRT = theta[(dim_cr+1):(dim_cr+dim_irt)],   N_GRADES = grades,   N_EXAMS = exams,   SPEED = lat[2],   SEED = seed )  ## Read the year of the last exam yle <- round(max(times_vec)/365,0) yle #> [1] 5 library(tidyr) library(dplyr) library(ggplot2) library(purrr)  # grid for ability and speed divided by outcome and year dt <- expand_grid(   ability = seq(-5,5, by=.25),   speed = seq(-5,5, by=.25),   outcome = c(0,1,2,3),   year = 1:(yle+1)   )  dtopt <- expand_grid(   outcome = c(0,1,2,3),   year = 1:(yle+1)   ) |>    mutate(     opt = pmap(list(outcome, year),                    function(x3,x4){                       # use only exams observed up to `x4`                      maxTime <- 365*x4                      obs_vec <- grades_vec>0&times_vec<maxTime                      Rfun <- function(PAR){                        -complete_likelihood(                         THETA = theta,                         EXTCOVARIATES = x,                         EXAMS_GRADES = grades_vec,                         EXAMS_DAYS = times_vec,                         EXAMS_OBSFLAG = obs_vec,                         EXAMS_SET = rep(TRUE, length(grades_vec)),                         OUTCOME = x3,                         YEAR = x4,                         N_GRADES = grades,                         N_EXAMS = exams,                         NYB = years_before,                         NYA = years_after,                         ABILITY = PAR[1],                         SPEED = PAR[2],                         YEAR_LAST_EXAM = yle,                         LOGFLAG = TRUE                       )                      }                       numopt <- try(optim(par = c(0,0), fn = Rfun)$par)                      numopt      })   ) |>    mutate(error = map_lgl(opt, ~class(.x)[1]==\"try-error\")) |>    mutate(opt = map2(error, opt, ~if(.x){c(NA,NA)}else{.y})) |>    mutate(     ability = map_dbl(opt, ~.x[1]),     speed = map_dbl(opt, ~.x[2])   )  # compute integrand value on the grid dt_val <- dt |>   mutate(     val = pmap_dbl(list(ability, speed, outcome, year),                    function(x1,x2,x3,x4){                                            # use only exams observed up to `x4`                      maxTime <- 365*x4                      obs_vec <- grades_vec>0&times_vec<maxTime                                            complete_likelihood(                         THETA = theta,                         EXTCOVARIATES = x,                         EXAMS_GRADES = grades_vec,                         EXAMS_DAYS = times_vec,                         EXAMS_OBSFLAG = obs_vec,                         EXAMS_SET = rep(TRUE, length(grades_vec)),                         OUTCOME = x3,                         YEAR = x4,                         N_GRADES = grades,                         N_EXAMS = exams,                         NYB = years_before,                         NYA = years_after,                         ABILITY = x1,                         SPEED = x2,                         YEAR_LAST_EXAM = yle,                         LOGFLAG = TRUE                       )            })        )  # rearrange and plot # the integrand value is scaled just for visual purposes to have  # similar color-scales across facets dt_val |>   group_by(year, outcome) |>   mutate(scaledIntegrand = scale(val),          outcome = factor(outcome,                           levels = c(0,1,2,3),                           labels = c('Enrollment', 'Dropout', 'Transfer', 'Graduation'),                            ordered = T)) |>   ggplot(aes(x = ability, y = speed)) +   geom_raster(aes(fill = scaledIntegrand)) +   geom_point(data = as_tibble(lat) |> rename(ability = V1, speed = V2), col = 'red')+   geom_point(data = dtopt |> mutate(          outcome = factor(outcome,                           levels = c(0,1,2,3),                           labels = c('Enrollment', 'Dropout', 'Transfer', 'Graduation'),                            ordered = T)),           aes(x = ability, y = speed), col = 'black') +   facet_grid(year~outcome)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/checkerList2vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided parameter list is genuine — checkerList2vec","title":"Check if the provided parameter list is genuine — checkerList2vec","text":"Check provided parameter list genuine","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/checkerList2vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided parameter list is genuine — checkerList2vec","text":"","code":"checkerList2vec(PARAMS_LIST, DIM_EXT, NYB, NYA, N_GRADES, N_EXAMS)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/checkerList2vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided parameter list is genuine — checkerList2vec","text":"PARAMS_LIST Parameter list. Structure documented. See example. DIM_EXT number external covariates competing risk model. NYB number years non-graduatable state. Needed determining many time-related intercepts competing risk model. NYA number years graduatable state. Needed determining many time-related intercepts competing risk model. N_GRADES number grades modelled. N_EXAMS number exams.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cppReparInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Intercepts reparameterisation — cppReparInt","title":"Intercepts reparameterisation — cppReparInt","text":"Intercepts reparameterisation","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cppReparInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intercepts reparameterisation — cppReparInt","text":"","code":"cppReparInt(X, CON2UN = TRUE)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cppReparInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intercepts reparameterisation — cppReparInt","text":"X Intercepts unconstrained parameter values grades low--high. CON2UN TRUE going constrained space unconstrained one.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cppReparInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intercepts reparameterisation — cppReparInt","text":"allows go back forth constrained intercepts unconstrained parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cr_conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Outcome Likelihood — cr_conditional","title":"Evaluate Outcome Likelihood — cr_conditional","text":"Evaluate Outcome Likelihood","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cr_conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Outcome Likelihood — cr_conditional","text":"","code":"cr_conditional(   THETA,   EXTCOVARIATES,   EXAMS_GRADES,   EXAMS_DAYS,   EXAMS_OBSFLAG,   EXAMS_SET,   OUTCOME,   YEAR,   N_GRADES,   N_EXAMS,   NYB,   NYA,   YEAR_LAST_EXAM,   ABILITY,   SPEED,   GRFLAG = TRUE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/cr_conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Outcome Likelihood — cr_conditional","text":"OUTCOME 1 dropout, 2 transfer, 3 graduation. 0 outcome observed. NYB Total number years non-graduatable regime. Needed determining many time-related intercepts. NYA Total number years graduatable regime. Needed determining many time-related intercepts. YEAR_LAST_EXAM Year exams completed first time. GRFLAG TRUE compute gradient. YEAR_FIRST First year evaluate. YEAR_LAST Last year evaluate. THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external predictors.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/examLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate exam specific likelihood — examLik","title":"Evaluate exam specific likelihood — examLik","text":"Evaluate exam specific likelihood","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/examLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate exam specific likelihood — examLik","text":"","code":"examLik(   EXAM,   GRADE,   DAY,   MAX_DAY,   OBSFLAG,   THETA_IRT,   N_GRADES,   N_EXAMS,   ABILITY,   SPEED,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/examLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate exam specific likelihood — examLik","text":"EXAM Exam interest. GRADE Grade interest. DAY Day interest. MAX_DAY Last day observation. OBSFLAG TRUE observed, FALSE -observed. THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY ability value. SPEED speed value. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/examLik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate exam specific likelihood — examLik","text":"returns probability observing specific grade given exam given day conditioned ability speed.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_cr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters related to the competing risk model — extract_params_cr","title":"Extract parameters related to the competing risk model — extract_params_cr","text":"Extract parameters related competing risk model","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_cr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters related to the competing risk model — extract_params_cr","text":"","code":"extract_params_cr(THETA_CR, DIM_EXT, NYB, NYA, OPTION)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_cr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters related to the competing risk model — extract_params_cr","text":"THETA_CR Parameter vector related competing risk model DIM_EXT Number external covariates competing risk model. NYB Number years non-graduatable state. Needed determining many time-related intercepts competing risk model. NYA Number years graduatable state. Needed determining many time-related intercepts competing risk model. OPTION selects parameters interest. 1 beta_d, 2 beta_t, 3 beta_g, 4 beta0_d, 5 beta0_t, 6 beta0_g.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_cr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters indexes related to the competing risk model — extract_params_idx_cr","title":"Extract parameters indexes related to the competing risk model — extract_params_idx_cr","text":"Extract parameters indexes related competing risk model","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_cr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters indexes related to the competing risk model — extract_params_idx_cr","text":"","code":"extract_params_idx_cr(THETA_CR, DIM_EXT, NYB, NYA, OPTION)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_cr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters indexes related to the competing risk model — extract_params_idx_cr","text":"THETA_CR Parameter vector related competing risk model DIM_EXT Number external covariates competing risk model. NYB Number years non-graduatable state. Needed determining many time-related intercepts competing risk model. NYA Number years graduatable state. Needed determining many time-related intercepts competing risk model. OPTION selects parameters interest. 1 beta_d, 2 beta_t, 3 beta_g, 4 beta0_d, 5 beta0_t, 6 beta0_g.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_cr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters indexes related to the competing risk model — extract_params_idx_cr","text":"return vector two values representing starting index length segment THETA_CR corresponding parameter interest","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_irt.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters related to the IRT model — extract_params_idx_irt","title":"Extract parameters related to the IRT model — extract_params_idx_irt","text":"Extract parameters related IRT model","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_irt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters related to the IRT model — extract_params_idx_irt","text":"","code":"extract_params_idx_irt(THETA_IRT, N_GRADES, N_EXAMS, OPTION, EXAM)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_irt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters related to the IRT model — extract_params_idx_irt","text":"THETA_IRT parameter vector related irt model N_GRADES number grades modelled. N_EXAMS number exams. OPTION Select parameters interest. 1 exam-grades slopes, 2 exam-grade intercepts, 3 time-mean parameter, 4 time-var parameter. EXAM exam interest. Possible values 1:N_EXAMS.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_idx_irt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters related to the IRT model — extract_params_idx_irt","text":"return vector two values representing starting index length segment THETA_IRT corresponding parameter interest.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_irt.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters related to the IRT model — extract_params_irt","title":"Extract parameters related to the IRT model — extract_params_irt","text":"Extract parameters related IRT model","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_irt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters related to the IRT model — extract_params_irt","text":"","code":"extract_params_irt(THETA_IRT, N_GRADES, N_EXAMS, OPTION, EXAM)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/extract_params_irt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters related to the IRT model — extract_params_irt","text":"THETA_IRT parameter vector related irt model N_GRADES number grades modelled. N_EXAMS number exams. OPTION Select parameters interest. 1 exam-grades slopes, 2 exam-grade intercepts, 3 time-mean parameter, 4 time-var parameter. EXAM exam interest. Possible values 1:N_EXAMS.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_GH_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Full model — full_GH_sample","title":"Full model — full_GH_sample","text":"Evaluate full model log likelihood single observation","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_GH_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full model — full_GH_sample","text":"","code":"full_GH_sample(   THETA,   EXTCOVARIATES,   EXAMS_GRADES,   EXAMS_DAYS,   EXAMS_OBSFLAG,   EXAMS_SET,   OUTCOME,   YEAR,   YEAR_LAST_EXAM,   GRID,   WEIGHTS,   N_GRADES,   N_EXAMS,   NYB,   NYA,   GRFLAG = TRUE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_GH_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full model — full_GH_sample","text":"THETA Suitable parameter vector provided paramsList2vec(). EXTCOVARIATES External covariates. EXAMS_GRADES Vector grades. EXAMS_DAYS Vector times. EXAMS_OBSFLAG Vector booleans.TRUE elements represent observed exams. FALSE elements unobserved ones. EXAMS_SET Vector filled booleans.TRUE elements represent exams study plan. FALSE elements non-relevant ones. OUTCOME 1 dropout, 2 transfer, 3 graduation. 0 outcome observed. YEAR Year evaluation. YEAR_LAST_EXAM Year exams completed first time. N_GRADES Number grades modelled. N_EXAMS Number exams modelled NYB Number years non-graduatable state. Needed determining many time-related intercepts. NYA Number years graduatable state. Needed determining many time-related intercepts. GRFLAG TRUE compute gradient. ABILITY Ability value. SPEED Speed value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_GH_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full model — full_GH_sample","text":"returns value integrand function, given parameters data single observation.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Full model — full_model","title":"Full model — full_model","text":"Evaluate full model log likelihood single observation","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full model — full_model","text":"","code":"full_model(   THETA,   EXTCOVARIATES,   EXAMS_GRADES,   EXAMS_DAYS,   EXAMS_OBSFLAG,   EXAMS_SET,   OUTCOME,   YEAR,   YEAR_LAST_EXAM,   N_GRADES,   N_EXAMS,   NYB,   NYA,   ABILITY,   SPEED,   GRFLAG = TRUE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full model — full_model","text":"THETA Suitable parameter vector provided paramsList2vec(). EXTCOVARIATES External covariates. EXAMS_GRADES Vector grades. EXAMS_DAYS Vector times. EXAMS_OBSFLAG Vector booleans.TRUE elements represent observed exams. FALSE elements unobserved ones. EXAMS_SET Vector filled booleans.TRUE elements represent exams study plan. FALSE elements non-relevant ones. OUTCOME 1 dropout, 2 transfer, 3 graduation. 0 outcome observed. YEAR Year evaluation. YEAR_LAST_EXAM Year exams completed first time. N_GRADES Number grades modelled. N_EXAMS Number exams modelled NYB Number years non-graduatable state. Needed determining many time-related intercepts. NYA Number years graduatable state. Needed determining many time-related intercepts. ABILITY Ability value. SPEED Speed value. GRFLAG TRUE compute gradient.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/full_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full model — full_model","text":"returns value integrand function, given parameters data single observation.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate hazard function based on outcome and year — gr_hazard","title":"Evaluate hazard function based on outcome and year — gr_hazard","text":"Evaluate hazard function based outcome year","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate hazard function based on outcome and year — gr_hazard","text":"","code":"gr_hazard(OUTCOME, YEAR, THETA_CR, COVARIATES, NYB, NYA)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate hazard function based on outcome and year — gr_hazard","text":"OUTCOME 1 dropout, 2 transfer, 3 graduation YEAR Possible values 1:NYB case dropout/transfer; 1:NYA case graduation THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external covariates NYB number years non-graduatable state. Needed determining many time-related intercepts. NYA number years graduatable state. Needed determining many time-related intercepts. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_hazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate hazard function based on outcome and year — gr_hazard","text":"returns hazard probability specific outcome year.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGrade.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the probability of getting a specific grade — gr_pGrade","title":"Evaluate the probability of getting a specific grade — gr_pGrade","text":"Evaluate probability getting specific grade","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGrade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the probability of getting a specific grade — gr_pGrade","text":"","code":"gr_pGrade(GRADE, EXAM, THETA_IRT, N_GRADES, N_EXAMS, ABILITY)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGrade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the probability of getting a specific grade — gr_pGrade","text":"GRADE Grade used reference EXAM Exam interest THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY Ability value. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGrade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the probability of getting a specific grade — gr_pGrade","text":"returns probability obtaining grade GRADE exam EXAM.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGreaterGrades.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the probability of grades greater or equal than the reference one — gr_pGreaterGrades","title":"Evaluate the probability of grades greater or equal than the reference one — gr_pGreaterGrades","text":"Evaluate probability grades greater equal reference one","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGreaterGrades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the probability of grades greater or equal than the reference one — gr_pGreaterGrades","text":"","code":"gr_pGreaterGrades(GRADE, EXAM, THETA_IRT, N_GRADES, N_EXAMS, ABILITY)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGreaterGrades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the probability of grades greater or equal than the reference one — gr_pGreaterGrades","text":"GRADE Grade used reference EXAM Exam interest THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY Ability value. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pGreaterGrades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the probability of grades greater or equal than the reference one — gr_pGreaterGrades","text":"returns probability obtaining grades higher GRADE exam EXAM.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pTimeExam.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — gr_pTimeExam","title":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — gr_pTimeExam","text":"Evaluate c.d.f p.d.f last attempt exam","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pTimeExam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — gr_pTimeExam","text":"","code":"gr_pTimeExam(   EXAM,   DAY,   THETA_IRT,   N_GRADES,   N_EXAMS,   SPEED,   CDFFLAG,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_pTimeExam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — gr_pTimeExam","text":"EXAM Exam interest. DAY Day interest. THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. SPEED speed value. CDFFLAG TRUE c.d.f. time. FALSE p.d.f. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate survival function given a the range of years of interest — gr_survival","title":"Evaluate survival function given a the range of years of interest — gr_survival","text":"Evaluate survival function given range years interest","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate survival function given a the range of years of interest — gr_survival","text":"","code":"gr_survival(   YEAR_FIRST,   YEAR_LAST,   THETA_CR,   COVARIATES,   NYB,   NYA,   YEAR_LAST_EXAM = 100L )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate survival function given a the range of years of interest — gr_survival","text":"YEAR_FIRST First year evaluate. YEAR_LAST Last year evaluate. THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external predictors. NYB Total number years non-graduatable regime. Needed determining many time-related intercepts. NYA Total number years graduatable regime. Needed determining many time-related intercepts. YEAR_LAST_EXAM Year exams completed first time LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/gr_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate survival function given a the range of years of interest — gr_survival","text":"returns probability survival YEAR FIRST YEAR_LAST included.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_examLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate exam specific likelihood — grl_examLik","title":"Evaluate exam specific likelihood — grl_examLik","text":"Evaluate exam specific likelihood","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_examLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate exam specific likelihood — grl_examLik","text":"","code":"grl_examLik(   EXAM,   GRADE,   DAY,   MAX_DAY,   OBSFLAG,   THETA_IRT,   N_GRADES,   N_EXAMS,   ABILITY,   SPEED,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_examLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate exam specific likelihood — grl_examLik","text":"EXAM Exam interest. GRADE Grade interest. DAY Day interest. MAX_DAY Last day observation. OBSFLAG TRUE observed, FALSE -observed. THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY ability value. SPEED speed value. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_examLik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate exam specific likelihood — grl_examLik","text":"returns probability observing specific grade given exam given day conditioned ability speed.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_latent_distr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of the log joint density of speed and ability — grl_latent_distr2","title":"Gradient of the log joint density of speed and ability — grl_latent_distr2","text":"Gradient log joint density speed ability","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_latent_distr2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of the log joint density of speed and ability — grl_latent_distr2","text":"","code":"grl_latent_distr2(ABILITY, SPEED, PAR1, PAR2)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_latent_distr2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of the log joint density of speed and ability — grl_latent_distr2","text":"ABILITY ability value. SPEED speed value. PAR1 L2,1. PAR2 L2,2. LOGFLAG TRUE log density.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_outcomeLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Outcome Likelihood — grl_outcomeLik","title":"Evaluate Outcome Likelihood — grl_outcomeLik","text":"Evaluate Outcome Likelihood","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_outcomeLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Outcome Likelihood — grl_outcomeLik","text":"","code":"grl_outcomeLik(   OUTCOME,   YEAR_FIRST,   YEAR_LAST,   THETA_CR,   COVARIATES,   NYB,   NYA,   YEAR_LAST_EXAM = 100L )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/grl_outcomeLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Outcome Likelihood — grl_outcomeLik","text":"OUTCOME 1 dropout, 2 transfer, 3 graduation. 0 outcome observed. YEAR_FIRST First year evaluate. YEAR_LAST Last year evaluate. THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external predictors. NYB Total number years non-graduatable regime. Needed determining many time-related intercepts. NYA Total number years graduatable regime. Needed determining many time-related intercepts. YEAR_LAST_EXAM Year exams completed first time. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate hazard function based on outcome and year — hazard","title":"Evaluate hazard function based on outcome and year — hazard","text":"Evaluate hazard function based outcome year","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate hazard function based on outcome and year — hazard","text":"","code":"hazard(OUTCOME, YEAR, THETA_CR, COVARIATES, NYB, NYA, LOGFLAG = FALSE)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate hazard function based on outcome and year — hazard","text":"OUTCOME 1 dropout, 2 transfer, 3 graduation YEAR Possible values 1:NYB case dropout/transfer; 1:NYA case graduation THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external covariates NYB number years non-graduatable state. Needed determining many time-related intercepts. NYA number years graduatable state. Needed determining many time-related intercepts. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/hazard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate hazard function based on outcome and year — hazard","text":"returns hazard probability specific outcome year.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/irt_conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the complete IRT log likelihood function — irt_conditional","title":"Evaluate the complete IRT log likelihood function — irt_conditional","text":"Evaluate complete IRT log likelihood function","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/irt_conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the complete IRT log likelihood function — irt_conditional","text":"","code":"irt_conditional(   THETA,   EXAMS_GRADES,   EXAMS_DAYS,   EXAMS_OBSFLAG,   EXAMS_SET,   YEAR,   N_GRADES,   N_EXAMS,   NYB,   NYA,   DIM_EXT,   ABILITY,   SPEED,   GRFLAG = TRUE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/irt_conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the complete IRT log likelihood function — irt_conditional","text":"THETA Suitable parameter vector provided paramsList2vec(). EXAMS_GRADES Vector grades. EXAMS_DAYS Vector times. EXAMS_OBSFLAG Vector booleans.TRUE elements represent observed exams. FALSE elements unobserved ones. EXAMS_SET Vector filled booleans.TRUE elements represent exams study plan. FALSE elements non-relevant ones. YEAR Year evaluation. N_GRADES Number grades modelled. N_EXAMS Number exams modelled NYB Number years non-graduatable state. Needed determining many time-related intercepts. NYA Number years graduatable state. Needed determining many time-related intercepts. DIM_EXT Number external covariates CR conditional model. ABILITY Ability value. SPEED Speed value. GRFLAG TRUE compute gradient.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/irt_conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the complete IRT log likelihood function — irt_conditional","text":"returns list : ll - log-likelihood conditional IRT model. gr - gradient log-likelihood.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/lat_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Latent distribution — lat_distr","title":"Latent distribution — lat_distr","text":"Provides wrapper cpp class LAT_DISTR, computes log density gradient joint distribution ability speed.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/lat_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latent distribution — lat_distr","text":"","code":"lat_distr(ABILITY, SPEED, THETA, GRFLAG = TRUE)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/lat_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Latent distribution — lat_distr","text":"ABILITY ability value. SPEED speed value. THETA parameters vector. last two elements used (L2,1, L2,2), L lower triangular Cholesky latent covariance matrix. GRFLAG TRUE compute gradient.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/lat_distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Latent distribution — lat_distr","text":"returns list : ll - log-likelihood latent distribution. gr - gradient log-likelihood.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/latent_distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of speed and ability — latent_distr","title":"Joint density of speed and ability — latent_distr","text":"Joint density speed ability","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/latent_distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of speed and ability — latent_distr","text":"","code":"latent_distr(ABILITY, SPEED, REPRHO, REPSIGMA, LOGFLAG = FALSE)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/latent_distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of speed and ability — latent_distr","text":"ABILITY ability value. SPEED speed value. REPRHO atanh transformation latent correlation. REPSIGMA log standard deviation speed. LOGFLAG TRUE log density.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/latent_distr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of speed and ability — latent_distr2","title":"Joint density of speed and ability — latent_distr2","text":"Joint density speed ability","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/latent_distr2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of speed and ability — latent_distr2","text":"","code":"latent_distr2(ABILITY, SPEED, PAR1, PAR2, LOGFLAG = FALSE)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/latent_distr2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of speed and ability — latent_distr2","text":"ABILITY ability value. SPEED speed value. PAR1 L2,1. PAR2 L2,2. LOGFLAG TRUE log density.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/outcomeLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Outcome Likelihood — outcomeLik","title":"Evaluate Outcome Likelihood — outcomeLik","text":"Evaluate Outcome Likelihood","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/outcomeLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Outcome Likelihood — outcomeLik","text":"","code":"outcomeLik(   OUTCOME,   YEAR_FIRST,   YEAR_LAST,   THETA_CR,   COVARIATES,   NYB,   NYA,   YEAR_LAST_EXAM = 100L,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/outcomeLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Outcome Likelihood — outcomeLik","text":"OUTCOME 1 dropout, 2 transfer, 3 graduation. 0 outcome observed. YEAR_FIRST First year evaluate. YEAR_LAST Last year evaluate. THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external predictors. NYB Total number years non-graduatable regime. Needed determining many time-related intercepts. NYA Total number years graduatable regime. Needed determining many time-related intercepts. YEAR_LAST_EXAM Year exams completed first time. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGrade.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the probability of getting a specific grade — pGrade","title":"Evaluate the probability of getting a specific grade — pGrade","text":"Evaluate probability getting specific grade","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGrade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the probability of getting a specific grade — pGrade","text":"","code":"pGrade(GRADE, EXAM, THETA_IRT, N_GRADES, N_EXAMS, ABILITY, LOGFLAG = FALSE)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGrade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the probability of getting a specific grade — pGrade","text":"GRADE Grade used reference EXAM Exam interest THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY Ability value. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGrade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the probability of getting a specific grade — pGrade","text":"returns probability obtaining grade GRADE exam EXAM.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGreaterGrades.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the probability of grades greater or equal than the reference one — pGreaterGrades","title":"Evaluate the probability of grades greater or equal than the reference one — pGreaterGrades","text":"Evaluate probability grades greater equal reference one","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGreaterGrades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the probability of grades greater or equal than the reference one — pGreaterGrades","text":"","code":"pGreaterGrades(   GRADE,   EXAM,   THETA_IRT,   N_GRADES,   N_EXAMS,   ABILITY,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGreaterGrades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the probability of grades greater or equal than the reference one — pGreaterGrades","text":"GRADE Grade used reference EXAM Exam interest THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY Ability value. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pGreaterGrades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the probability of grades greater or equal than the reference one — pGreaterGrades","text":"returns probability obtaining grades higher GRADE exam EXAM.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pTimeExam.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — pTimeExam","title":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — pTimeExam","text":"Evaluate c.d.f p.d.f last attempt exam","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pTimeExam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — pTimeExam","text":"","code":"pTimeExam(   EXAM,   DAY,   THETA_IRT,   N_GRADES,   N_EXAMS,   SPEED,   CDFFLAG,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/pTimeExam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the c.d.f or p.d.f of the last attempt to an exam — pTimeExam","text":"EXAM Exam interest. DAY Day interest. THETA_IRT Portion parameter vector related IRT model N_GRADES Number grades modelled. N_EXAMS Number exams. SPEED speed value. CDFFLAG TRUE c.d.f. time. FALSE p.d.f. LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsList2vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct parameter vector from list — paramsList2vec","title":"Construct parameter vector from list — paramsList2vec","text":"Given properly-structered list parameters, returns implied unconstrained parameter vector.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsList2vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct parameter vector from list — paramsList2vec","text":"","code":"paramsList2vec(PARAMS_LIST, DIM_EXT, NYB, NYA, N_GRADES, N_EXAMS)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsList2vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct parameter vector from list — paramsList2vec","text":"PARAMS_LIST Parameter list. Structure documented. See example. DIM_EXT number external covariates competing risk model. NYB number years non-graduatable state. Needed determining many time-related intercepts competing risk model. NYA number years graduatable state. Needed determining many time-related intercepts competing risk model. N_GRADES number grades modelled. N_EXAMS number exams.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsList2vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct parameter vector from list — paramsList2vec","text":"returns unconstrained parameter vector.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsList2vec.html","id":"internal-reparameterisations","dir":"Reference","previous_headings":"","what":"Internal reparameterisations","title":"Construct parameter vector from list — paramsList2vec","text":"Exam-specific intercepts vector. Decreasing lower grade higher. Reparametrised using reparInt(), Latent correlation. Reparameterised via Fisher's transformation. Standard deviations. Reparameterised via exponential transformation.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsList2vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct parameter vector from list — paramsList2vec","text":"","code":"seed <- 123  ## Setup dimensions external_covariates <- 3L     # number of external covariates years_before <- 6L            # number of possible years in the regime without graduation years_after <- 2L             # number of possible years in the regime with graduation grades <- 4L                  # number of grades exams <- 10L                  # number of exams   ## Construct the list params_list <- list()  # Three main blocks params_list[['CR']] <- list() params_list[['IRT']] <- list() params_list[['LAT']] <- list()  # Parameter-blocks related to competing risks set.seed(seed) params_list[['CR']][['Dropout']] <- list(  'Slope_ability' = rnorm(1),  'Slope_speed' = rnorm(1),  'Slope_covariates' = rnorm(external_covariates),  'Intercepts_year' = rnorm(years_before) )  set.seed(seed+1) params_list[['CR']][['Transfer']] <- list(  'Slope_ability' = rnorm(1),  'Slope_speed' = rnorm(1),  'Slope_covariates' = rnorm(external_covariates),  'Intercepts_year' = rnorm(years_before) )  set.seed(seed+2) params_list[['CR']][['Graduation']] <- list(  'Slope_ability' = rnorm(1),  'Slope_speed' = rnorm(1),  'Slope_covariates' = rnorm(external_covariates),  'Intercepts_year' = rnorm(years_after) )  ## Parameter-blocks related to exams IRT-modelling set.seed(seed+3) params_list[['IRT']][['Exams_slopes']] <- runif(exams, 0, 5)  set.seed(seed+4) examsInt <- matrix(0, exams, grades) for(ex in 1:exams){ examsInt[ex,] <- sort(rnorm(grades, 0, 5), decreasing = TRUE) } params_list[['IRT']][['Exams_grades_intercepts']] <- examsInt  set.seed(seed+5) params_list[['IRT']][['Exams_average_time']] <- rnorm(exams)  set.seed(seed+6) params_list[['IRT']][['Exams_variability_time']] <- runif(exams)  params_list[['LAT']][['Corr']] <- .6 params_list[['LAT']][['Speed_variability']] <- 1.5  theta <- paramsList2vec(   PARAMS_LIST = params_list,   DIM_EXT = external_covariates,   NYB = years_before,   NYA = years_after,   N_GRADES = grades,   N_EXAMS = exams)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsVec2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct named list from parameter vector — paramsVec2list","title":"Construct named list from parameter vector — paramsVec2list","text":"Construct named list parameter vector","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsVec2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct named list from parameter vector — paramsVec2list","text":"","code":"paramsVec2list(   THETA,   DIM_EXT,   NYB,   NYA,   N_GRADES,   N_EXAMS,   LABS_EXAMS = NULL,   LABS_GRADES = NULL,   LABS_COVARIATES = NULL )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsVec2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct named list from parameter vector — paramsVec2list","text":"THETA Parameter vector. Structure documented. DIM_EXT number external covariates competing risk model. NYB number years non-graduatable state. Needed determining many time-related intercepts competing risk model. NYA number years graduatable state. Needed determining many time-related intercepts competing risk model. N_GRADES number grades modelled. N_EXAMS number exams. LABS_EXAMS optional label exams LABS_GRADES optional label grades LABS_COVARIATES optional label covariates","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsVec2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct named list from parameter vector — paramsVec2list","text":"Given proper unconstrained parameter vector, returns list model parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/paramsVec2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct named list from parameter vector — paramsVec2list","text":"","code":"seed <- 123  ## Setup dimensions external_covariates <- 3L     # number of external covariates years_before <- 6L            # number of possible years in the regime without graduation years_after <- 2L             # number of possible years in the regime with graduation grades <- 4L                  # number of grades exams <- 10L                  # number of exams  dim <- 3 * (external_covariates+2) + 2 * (years_before) +         years_after + 3 * exams + exams * grades + 2  set.seed(seed) theta <- rnorm(dim)  ## Retrieve the list params_list <- paramsVec2list(   THETA = theta,   DIM_EXT = external_covariates,   NYB = years_before,   NYA = years_after,   N_GRADES = grades,   N_EXAMS = exams)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/reparInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Intercepts reparameterisation — reparInt","title":"Intercepts reparameterisation — reparInt","text":"allows go back forth constrained intercepts unconstrained parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/reparInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intercepts reparameterisation — reparInt","text":"","code":"reparInt(X, CON2UN = T)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/reparInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intercepts reparameterisation — reparInt","text":"X Intercepts unconstrained parameter values grades low--high. CON2UN TRUE going constrained space unconstrained one.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/reparInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intercepts reparameterisation — reparInt","text":"numeric vector containing constrained intercepts unconstrained parameters.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/reparInt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intercepts reparameterisation — reparInt","text":"","code":"set.seed(123)  # random unconstrained parameters params <- rnorm(4)  # from unconstrained parameters to constrained intercepts intercepts <- reparInt(params, CON2UN = FALSE)  # retrieve params reparInt(intercepts, CON2UN = TRUE) #> [1] -0.56047565 -0.23017749  1.55870831  0.07050839"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngGrades.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random grades — rngGrades","title":"Generate random grades — rngGrades","text":"Generate random grades","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngGrades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random grades — rngGrades","text":"","code":"rngGrades(THETA_IRT, N_GRADES, N_EXAMS, ABILITY, SEED = 123)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngGrades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random grades — rngGrades","text":"THETA_IRT Portion parameter vector related IRT model. N_GRADES Number grades modelled. N_EXAMS Number exams. ABILITY Ability value. SEED Random seed.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngGrades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random grades — rngGrades","text":"returns vector grades.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngTimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random Times — rngTimes","title":"Generate random Times — rngTimes","text":"Generate random Times","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngTimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random Times — rngTimes","text":"","code":"rngTimes(THETA_IRT, N_GRADES, N_EXAMS, SPEED, SEED = 123)"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngTimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random Times — rngTimes","text":"THETA_IRT Portion parameter vector related IRT model. N_GRADES Number grades modelled. N_EXAMS Number exams. SPEED Speed value. SEED Random seed.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/rngTimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random Times — rngTimes","text":"returns vector times","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate survival function given a the range of years of interest — survival","title":"Evaluate survival function given a the range of years of interest — survival","text":"Evaluate survival function given range years interest","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate survival function given a the range of years of interest — survival","text":"","code":"survival(   YEAR_FIRST,   YEAR_LAST,   THETA_CR,   COVARIATES,   NYB,   NYA,   YEAR_LAST_EXAM = 100L,   LOGFLAG = FALSE )"},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate survival function given a the range of years of interest — survival","text":"YEAR_FIRST First year evaluate. YEAR_LAST Last year evaluate. THETA_CR Portion parameter vector related competing risk model COVARIATES first 2 values refers ability speed respectively. Remaining values external predictors. NYB Total number years non-graduatable regime. Needed determining many time-related intercepts. NYA Total number years graduatable regime. Needed determining many time-related intercepts. YEAR_LAST_EXAM Year exams completed first time LOGFLAG Set TRUE return log value.","code":""},{"path":"https://giuseppealfonzetti.github.io/studCRIRT/reference/survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate survival function given a the range of years of interest — survival","text":"returns probability survival YEAR FIRST YEAR_LAST included.","code":""}]
